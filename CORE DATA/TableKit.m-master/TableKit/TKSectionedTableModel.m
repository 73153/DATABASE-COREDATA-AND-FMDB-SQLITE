//
//  TKSectionedTableModel.m
//  TableKitDemo
//
//  Created by cesar4 on 30/07/12.
//
//

#import "TKSectionedTableModel.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
@implementation TKSectionedTableModel

@synthesize items = _items;
@synthesize sections = _sections;
@synthesize viewForHeaderInSectionBlock = _viewForHeaderInSectionBlock;


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)loadTableItems:(NSArray *)items withSections:(NSArray *)sections {
    _items = [NSMutableArray arrayWithArray:items];
    _sections = [NSMutableArray arrayWithArray:sections];
    [self.tableView reloadData];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (id)objectForRowAtIndexPath:(NSIndexPath *)indexPath {
    id object = [super objectForRowAtIndexPath:indexPath];
    
    if (nil == object) {
        return [[self.items objectAtIndex:indexPath.section] objectAtIndex:indexPath.row];
    }
    
    return object;
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSInteger)numberOfSections {
    return [self.sections count];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSInteger)numberOfRowsInSection:(NSInteger)section {
    return [[self.items objectAtIndex:section] count];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (void)setViewForHeaderInSectionWithBlock:(TKTableViewForHeaderInSectionViewBlock)viewForHeaderInSectionBlock {
    _viewForHeaderInSectionBlock = [viewForHeaderInSectionBlock copy];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark UITableViewDelegate


////////////////////////////////////////////////////////////////////////////////////////////////////
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    if (nil != self.viewForHeaderInSectionBlock) {
        NSString *title = [self tableView:self.tableView titleForHeaderInSection:section];
        return self.viewForHeaderInSectionBlock(tableView, section, title);
    }
    
    return nil;
}


////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark UITableViewDataSource


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
    return [self.sections objectAtIndex:section];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return [self numberOfSections];
}


////////////////////////////////////////////////////////////////////////////////////////////////////
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return [self numberOfRowsInSection:section];
}


@end
